version: '3.9'

services:
  # API Service - The AI Principles Gym
  api:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    container_name: principles-gym-api
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql+asyncpg://gymuser:gympass@postgres:5432/principles_gym
      - CACHE_REDIS_URL=redis://redis:6379/0
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - LOG_FILE_PATH=/app/logs/api.log
      - ENABLE_METRICS=true
      - ENABLE_CORS=true
      - CORS_ORIGINS=["*"]
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      - API_KEY=${API_KEY:-}
      # Performance settings
      - MAX_SCENARIOS_PER_SESSION=500
      - MAX_CONCURRENT_SESSIONS=100
      - ACTION_BUFFER_SIZE=5000
      - DATABASE_POOL_SIZE=20
      - DATABASE_MAX_OVERFLOW=10
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - gym-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: principles-gym-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=gymuser
      - POSTGRES_PASSWORD=gympass
      - POSTGRES_DB=principles_gym
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - gym-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gymuser -d principles_gym"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

  # Redis Cache and Session Storage
  redis:
    image: redis:7-alpine
    container_name: principles-gym-redis
    restart: unless-stopped
    command: >
      redis-server
      --requirepass redispass
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
    volumes:
      - redis-data:/data
    networks:
      - gym-network
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Nginx Reverse Proxy with Rate Limiting
  nginx:
    image: nginx:alpine
    container_name: principles-gym-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    networks:
      - gym-network
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

networks:
  gym-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  nginx-logs:
    driver: local
