"""initial schema

Revision ID: ab30cbe405ef
Revises: 
Create Date: 2025-05-27 20:26:14.296822

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ab30cbe405ef'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_profiles',
    sa.Column('agent_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('behavioral_entropy', sa.Float(), nullable=False),
    sa.Column('total_actions', sa.Integer(), nullable=False),
    sa.Column('meta_data', sa.JSON(), nullable=False),
    sa.CheckConstraint('behavioral_entropy >= 0 AND behavioral_entropy <= 1', name='check_entropy_range'),
    sa.CheckConstraint('total_actions >= 0', name='check_positive_actions'),
    sa.PrimaryKeyConstraint('agent_id')
    )
    op.create_index(op.f('ix_agent_profiles_agent_id'), 'agent_profiles', ['agent_id'], unique=False)
    op.create_table('actions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('agent_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('relational_data', sa.JSON(), nullable=False),
    sa.Column('decision_context', sa.String(), nullable=False),
    sa.Column('context_weight', sa.Float(), nullable=False),
    sa.Column('action_type', sa.String(), nullable=False),
    sa.Column('outcome_valence', sa.Float(), nullable=False),
    sa.Column('decision_entropy', sa.Float(), nullable=False),
    sa.Column('latency_ms', sa.Integer(), nullable=False),
    sa.Column('context', sa.JSON(), nullable=False),
    sa.CheckConstraint('decision_entropy >= 0 AND decision_entropy <= 1', name='check_entropy_range'),
    sa.CheckConstraint('latency_ms >= 0', name='check_positive_latency'),
    sa.CheckConstraint('outcome_valence >= -1 AND outcome_valence <= 1', name='check_outcome_range'),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_profiles.agent_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_agent_timestamp', 'actions', ['agent_id', 'timestamp'], unique=False)
    op.create_index('idx_decision_context', 'actions', ['decision_context'], unique=False)
    op.create_index('idx_timestamp_partition', 'actions', ['timestamp'], unique=False)
    op.create_index(op.f('ix_actions_timestamp'), 'actions', ['timestamp'], unique=False)
    op.create_table('principles',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('agent_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('strength_score', sa.Float(), nullable=False),
    sa.Column('confidence_lower', sa.Float(), nullable=False),
    sa.Column('confidence_upper', sa.Float(), nullable=False),
    sa.Column('volatility', sa.Float(), nullable=False),
    sa.Column('evidence_count', sa.Integer(), nullable=False),
    sa.Column('contradictions_count', sa.Integer(), nullable=False),
    sa.Column('lineage_data', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('meta_data', sa.JSON(), nullable=False),
    sa.CheckConstraint('confidence_lower <= confidence_upper', name='check_confidence_order'),
    sa.CheckConstraint('evidence_count >= 0 AND contradictions_count >= 0', name='check_positive_counts'),
    sa.CheckConstraint('strength_score >= 0 AND strength_score <= 1', name='check_strength_range'),
    sa.CheckConstraint('volatility >= 0 AND volatility <= 1', name='check_volatility_range'),
    sa.ForeignKeyConstraint(['agent_id'], ['agent_profiles.agent_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_agent_principle', 'principles', ['agent_id', 'name'], unique=False)
    op.create_index('idx_strength_score', 'principles', ['strength_score'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_strength_score', table_name='principles')
    op.drop_index('idx_agent_principle', table_name='principles')
    op.drop_table('principles')
    op.drop_index(op.f('ix_actions_timestamp'), table_name='actions')
    op.drop_index('idx_timestamp_partition', table_name='actions')
    op.drop_index('idx_decision_context', table_name='actions')
    op.drop_index('idx_agent_timestamp', table_name='actions')
    op.drop_table('actions')
    op.drop_index(op.f('ix_agent_profiles_agent_id'), table_name='agent_profiles')
    op.drop_table('agent_profiles')
    # ### end Alembic commands ###
